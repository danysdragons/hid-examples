cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.34.4.
--
-- see: https://github.com/sol/hpack

name:           du-proj
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/githubuser/du-proj#readme>
homepage:       https://github.com/githubuser/du-proj#readme
bug-reports:    https://github.com/githubuser/du-proj/issues
author:         Author name here
maintainer:     example@example.com
copyright:      2021 Author name here
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    ChangeLog.md

source-repository head
  type: git
  location: https://github.com/githubuser/du-proj

library
  exposed-modules:
      App
      AppRTWTST
      AppRWST
      AppTypes
      DirTree
      DiskUsage
      FileCounter
      Helper
      Lib
      Utils
  other-modules:
      Paths_du_proj
  hs-source-dirs:
      src
  default-extensions:
      OverloadedStrings, LambdaCase, DeriveFoldable, DeriveFunctor, DeriveLift, DeriveTraversable, ApplicativeDo, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures ,EmptyCase, ExistentialQuantification , ExplicitForAll ,FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs ,InstanceSigs, KindSignatures, MultiParamTypeClasses, MultiWayIf ,NamedFieldPuns, NoStarIsType, PatternSynonyms ,PolyKinds, RankNTypes, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell ,TupleSections, TypeFamilies, TypeFamilyDependencies ,TypeOperators, TypeApplications ,NamedFieldPuns
  build-depends:
      base >=4.7 && <5
    , directory
    , extra
    , filepath
    , mtl
    , optparse-applicative
    , text
    , text-show
    , unix-compat
  default-language: Haskell2010

executable du-proj-exe
  main-is: Main.hs
  other-modules:
      Paths_du_proj
  hs-source-dirs:
      app
  default-extensions:
      OverloadedStrings, LambdaCase, DeriveFoldable, DeriveFunctor, DeriveLift, DeriveTraversable, ApplicativeDo, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures ,EmptyCase, ExistentialQuantification , ExplicitForAll ,FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs ,InstanceSigs, KindSignatures, MultiParamTypeClasses, MultiWayIf ,NamedFieldPuns, NoStarIsType, PatternSynonyms ,PolyKinds, RankNTypes, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell ,TupleSections, TypeFamilies, TypeFamilyDependencies ,TypeOperators, TypeApplications ,NamedFieldPuns
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , directory
    , du-proj
    , extra
    , filepath
    , mtl
    , optparse-applicative
    , text
    , text-show
    , unix-compat
  default-language: Haskell2010

test-suite du-proj-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Paths_du_proj
  hs-source-dirs:
      test
  default-extensions:
      OverloadedStrings, LambdaCase, DeriveFoldable, DeriveFunctor, DeriveLift, DeriveTraversable, ApplicativeDo, BangPatterns, ConstraintKinds, DataKinds, DefaultSignatures ,EmptyCase, ExistentialQuantification , ExplicitForAll ,FlexibleContexts, FlexibleInstances, FunctionalDependencies, GADTs ,InstanceSigs, KindSignatures, MultiParamTypeClasses, MultiWayIf ,NamedFieldPuns, NoStarIsType, PatternSynonyms ,PolyKinds, RankNTypes, ScopedTypeVariables, StandaloneDeriving, TemplateHaskell ,TupleSections, TypeFamilies, TypeFamilyDependencies ,TypeOperators, TypeApplications ,NamedFieldPuns
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      base >=4.7 && <5
    , directory
    , du-proj
    , extra
    , filepath
    , mtl
    , optparse-applicative
    , text
    , text-show
    , unix-compat
  default-language: Haskell2010
